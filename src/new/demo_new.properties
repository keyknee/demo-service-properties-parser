##########################################################################################################
##
## demo.properties - Original
## 
## This properties file is used primary as an example of the use-case the service properties parser utility
## was designed to address. 
## 
##########################################################################################################

service.instance.name = Update
service.log.retention = 50
service.log.timestamp.format = yyyy-MM-dd'T'HH:mm:ss.SSSZ

##########################################################################################################
## Database Config Example
##
## Config keys related to connectivity to database housing device and GIS data
##########################################################################################################
demo.database.mode = 0
demo.database.jdbc.driver.class = net.sourceforge.jtds.jdbc.Driver
demo.database.jdbc.server.prefix = jdbc:jtds:sqlserver:
demo.database.server.name = (local)
demo.database.server.port = 1433
demo.database.name = No_Database
demo.database.agency = (only)

local.timezone = US/Eastern
server.timezone = US/Eastern

##########################################################################################################
## Profile Tag Examples
## 
## Profile tags are designed to allow for unique configurations across difference device types. Some may wish
## to distinguish physical device types - i.e. tablets or phones - while others may distinguish between something like
## office locations - i.e. Denver vs Atlanta. 
##
## These profile tags are important in how required config keys are determined, however. If a required config key exists 
## with a profile tag prefix, the requirement is considered fulfilled regardless of what that tag is. This allows companies
## to effectively choose their own "label", or identifier, for their profiles
##########################################################################################################

device.server.profile.tag.0 = TABLETS
#device.server.profile.tag.1 = PHONES
#device.server.profile.tag.2 = OTHER

##########################################################################################################
## Device Key Examples
##
## Device keys are configs that belong to individual devices in the database. For required configs, they are considered
##  fulfilled if it exists in the config regardless of the profile tag that is prefixed, or the ID number that is the suffix
##########################################################################################################


TABLETS.device.config.example.id(10) = 10
TABLETS.device.config.example.ipaddr(10) = 1.1.1.1
TABLETS.device.config.example.pairing(10) = 110
TABLETS.device.config.example.id(20) = 20
TABLETS.device.config.example.ipaddr(20) = 2.2.2.2
TABLETS.device.config.example.pairing(20) = 120
TABLETS.device.config.example.id(30) = 30
TABLETS.device.config.example.ipaddr(30) = 3.3.3.3
TABLETS.device.config.example.pairing(30) = 130

TABLETS.device.gateway.config.rmp.ipaddr.for.server = 10.0.0.220

##########################################################################################################
## New configs to test/confirm that utility adds missing values
##########################################################################################################

service.shiny.new.config = enabled
local.timezone.respects.daylightssavings = false
server.timezone.respects.daylightssavings = true
TABLETS.device.config.example.service.provider = ISP