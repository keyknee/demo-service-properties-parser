name: PyInstaller

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Setup Py 3
      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Confirm Python version
      # Setup and activate venv
      # Install requirements
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          # pip install flake8 pytest
          if ([System.IO.File]::Exists( "requirements.txt" ))
            {
              pip install -r requirements.txt
            }
      # Run PyInstaller
      - name: Run PyInstaller
        run: pyinstaller src\app.py -n "Service Properties Parser" -i src\app.ico --add-data .\readme.md;. --add-data src\cur;.\cur --add-data src\new;.\new --add-data src\output;.\output --add-data src\logs;.\logs --add-data src\app.ico;.
        shell: cmd
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: service-parser-windows
          path: src/dist/windows
